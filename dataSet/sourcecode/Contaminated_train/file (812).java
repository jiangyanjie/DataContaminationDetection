/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ContasRecebar.java
 *
 * Created on 21/11/2011, 15:15:34
 */
package br.com.seeds;

import Classes.ContasPagar;
import Classes.ContasReceber;
import Classes.LimitadorMoeda;
import ClassesDAO.ContasPagarDAO;
import ClassesDAO.ContasReceberDAO;
import Excessoes.BancoException;
import java.awt.AWTKeyStroke;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Guilherme
 */
public class ContasRecebar extends javax.swing.JFrame {

    int codigo = 0;
    int codigoPagamento = 0;
    int codigoRecebimento = 0;
    String Total = "";
    String data = "";
    String parametroPesquisa = "";
    String campo;
    public ContasPagarDAO dao;
    public ContasReceberDAO daos;
    public ContasPagar pagamentos = new ContasPagar();
    public ContasReceber recebimentos = new ContasReceber();

    /**
     * Creates new form ContasRecebar
     */
    public ContasRecebar() throws BancoException {
        initComponents();
        //Para trocar função do Tab por Enter
        HashSet conj = new HashSet(this.getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        this.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);

        setLocationRelativeTo(null);
        dao = new ContasPagarDAO();
        daos = new ContasReceberDAO();
        txtDescricao.setDocument(new LimiteCampos.FixedLengthDocument(60));
        txtValor.setDocument(new LimiteCampos.FixedLengthDocument(14));
        txtValor.setDocument(new LimitadorMoeda());
        txtDescricao1.setDocument(new LimiteCampos.FixedLengthDocument(60));
        txtValor1.setDocument(new LimiteCampos.FixedLengthDocument(14));
        txtValor1.setDocument(new LimitadorMoeda());
    }

    public void DataAlterando(String data, int Componente) {

        Date date = null;
        DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");

        try {

            date = (java.util.Date) formatter.parse(data);
        } catch (java.text.ParseException ex) {
            Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (Componente == 1) {
            txtEmissao.setDate(date);
        }
    }

    public void DataAlterandoV(String data, int Componente) {

        Date date = null;
        DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");

        try {

            date = (java.util.Date) formatter.parse(data);
        } catch (java.text.ParseException ex) {
            Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (Componente == 1) {
            txtVencimento.setDate(date);
        }
    }

    public void DataAlterandoER(String data, int Componente) {

        Date date = null;
        DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");

        try {

            date = (java.util.Date) formatter.parse(data);
        } catch (java.text.ParseException ex) {
            Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (Componente == 1) {
            txtEmissao1.setDate(date);
        }
    }

    public void DataAlterandoVR(String data, int Componente) {

        Date date = null;
        DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");

        try {

            date = (java.util.Date) formatter.parse(data);
        } catch (java.text.ParseException ex) {
            Logger.getLogger(ContasPagar.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (Componente == 1) {
            txtVencimento1.setDate(date);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jBConcretizarPagamento = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBAlterarDados = new javax.swing.JButton();
        jBSair = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txtEmissao = new com.toedter.calendar.JDateChooser();
        txtVencimento = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        masterTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtDescricao1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtValor1 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jBConcretizarRecebimento = new javax.swing.JButton();
        jBExcluirR = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jBSairR = new javax.swing.JButton();
        jBSalvarR = new javax.swing.JButton();
        jBLimparR = new javax.swing.JButton();
        txtEmissao1 = new com.toedter.calendar.JDateChooser();
        txtVencimento1 = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Contas");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        masterTable.setModel(getDadosTabelaClientePesquisa());
        masterTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                masterTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(masterTable);

        jLabel1.setText("* Descrição :");

        txtDescricao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setText("* Emissão: ");

        jLabel4.setText("* Vencimento:");

        jLabel5.setText("* Valor: ");

        txtValor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jBConcretizarPagamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/entrar.png"))); // NOI18N
        jBConcretizarPagamento.setText("Pagar");
        jBConcretizarPagamento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBConcretizarPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConcretizarPagamentoActionPerformed(evt);
            }
        });

        jBExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/edit-delete.png"))); // NOI18N
        jBExcluir.setText("Excluir");
        jBExcluir.setToolTipText("Voltar ao menu");
        jBExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBExcluir.setFocusable(false);
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });

        jBAlterarDados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/view-refresh.png"))); // NOI18N
        jBAlterarDados.setText("Aterar dados");
        jBAlterarDados.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBAlterarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarDadosActionPerformed(evt);
            }
        });

        jBSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/cancelar.png"))); // NOI18N
        jBSair.setText("Sair");
        jBSair.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSairActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/Novo.png"))); // NOI18N
        jButton1.setText("Salvar");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/draw-eraser (2).png"))); // NOI18N
        jButton3.setText("Limpar");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBAlterarDados, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(jBConcretizarPagamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBSair, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBAlterarDados, jBConcretizarPagamento, jBExcluir, jBSair, jButton1, jButton3});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBConcretizarPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBAlterarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBAlterarDados, jBConcretizarPagamento, jBExcluir, jBSair, jButton1, jButton3});

        txtEmissao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtVencimento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CONTAS A PAGAR");
        jLabel2.setToolTipText("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel3, jLabel4, jLabel5});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(txtVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(103, 103, 103)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel3, jLabel4, jLabel5});

        jTabbedPane1.addTab("                    A Pagar                    ", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        masterTable1.setModel(getDadosTabelaPesquisaReceber());
        masterTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                masterTable1MouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(masterTable1);

        jLabel6.setText("* Descrição :");

        txtDescricao1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel7.setText("* Emissão: ");

        jLabel8.setText("* Vencimento:");

        jLabel9.setText("* Valor: ");

        txtValor1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jBConcretizarRecebimento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/entrar.png"))); // NOI18N
        jBConcretizarRecebimento.setText("Receber");
        jBConcretizarRecebimento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBConcretizarRecebimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConcretizarRecebimentoActionPerformed(evt);
            }
        });

        jBExcluirR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/edit-delete.png"))); // NOI18N
        jBExcluirR.setText("Excluir");
        jBExcluirR.setToolTipText("Voltar ao menu");
        jBExcluirR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBExcluirR.setFocusable(false);
        jBExcluirR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirRActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/view-refresh.png"))); // NOI18N
        jButton5.setText("Aterar dados");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jBSairR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/cancelar.png"))); // NOI18N
        jBSairR.setText("Sair");
        jBSairR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBSairR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSairRActionPerformed(evt);
            }
        });

        jBSalvarR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/Novo.png"))); // NOI18N
        jBSalvarR.setText("Salvar");
        jBSalvarR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBSalvarR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarRActionPerformed(evt);
            }
        });

        jBLimparR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/imagens/draw-eraser (2).png"))); // NOI18N
        jBLimparR.setText("Limpar");
        jBLimparR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBLimparR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimparRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(jBConcretizarRecebimento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(jBSalvarR, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                .addGap(23, 23, 23)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBSairR, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBExcluirR, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBLimparR, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBConcretizarRecebimento, jBExcluirR, jBLimparR, jBSairR, jBSalvarR, jButton5});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBSalvarR, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBLimparR, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBExcluirR, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBConcretizarRecebimento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBSairR, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBConcretizarRecebimento, jBExcluirR, jBLimparR, jBSairR, jBSalvarR, jButton5});

        txtEmissao1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtVencimento1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("CONTAS A RECEBER");
        jLabel10.setToolTipText("");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addComponent(txtDescricao1)
                                .addGap(28, 28, 28))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtValor1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtEmissao1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtVencimento1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(154, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28))))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel6, jLabel7, jLabel9});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDescricao1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmissao1, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtVencimento1, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtValor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))
                .addGap(17, 17, 17))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel6, jLabel9});

        jTabbedPane1.addTab("                    A Receber                    ", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
        int selection = JOptionPane.showConfirmDialog(this,
                "Deseja excluir o registro?",
                "", JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if (selection == JOptionPane.OK_OPTION) {
            if (!txtDescricao.getText().equals("")) {
                pagamentos.setCodigo(codigoPagamento);
                try {
                    dao.deletarContasP(pagamentos);
                    JOptionPane.showMessageDialog(this,
                            "Efetuado com sucesso!");

                    txtDescricao.setText("");
                    txtValor.setText("");
                    txtEmissao.setDate(null);
                    txtVencimento.setDate(null);

                    //Reiniciar tabela 
                    ContasRecebar.this.dispose();
                    ContasRecebar conta;
                    try {
                        conta = new ContasRecebar();
                        conta.setVisible(true);
                    } catch (BancoException ex) {
                        Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                    }


                } catch (BancoException e) {
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(this,
                        "Campos obrigatórios não foram preenchidos!");
            }
        }
}//GEN-LAST:event_jBExcluirActionPerformed

    private void jBExcluirRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirRActionPerformed
        int selection = JOptionPane.showConfirmDialog(this,
                "Deseja excluir o registro?",
                "", JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if (selection == JOptionPane.OK_OPTION) {
            recebimentos.setCodigo(codigoRecebimento);
            try {
                daos.deletarContasR(recebimentos);
                JOptionPane.showMessageDialog(this,
                        "Efetuado com sucesso!");

                txtDescricao1.setText("");
                txtValor1.setText("");
                txtEmissao1.setDate(null);
                txtVencimento1.setDate(null);
                //getDadosTabelaPesquisaReceber();//TEM QUE Recriar a tabela NÃO RECRIA SÓ COM ESTE COMANDO

                //Reiniciar tabela 
                ContasRecebar.this.dispose();
                ContasRecebar conta;
                try {
                    conta = new ContasRecebar();
                    conta.setVisible(true);
                } catch (BancoException ex) {
                    Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                }

            } catch (BancoException e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_jBExcluirRActionPerformed

private void jBConcretizarPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConcretizarPagamentoActionPerformed
    Date a = txtEmissao.getDate();
    Date b = txtVencimento.getDate();
    if (a.compareTo(b) >= 1) {
        //System.out.println("A Maior");
        JOptionPane.showMessageDialog(this, "Data de Emissão é maior que a data de venciemnto!",
                "Atenção!", JOptionPane.INFORMATION_MESSAGE);
        txtEmissao.setDate(null);
        //txtVencimento.setDate(null);
    } else {
        if (txtDescricao.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Descrição tem que ser informado!",
                    "Atenção!", JOptionPane.INFORMATION_MESSAGE);
            txtDescricao.requestFocus();
        } else {
            if (txtEmissao.getDate().equals("")) {
                JOptionPane.showMessageDialog(this, "Campo Emissão tem que ser informado!",
                        "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                txtEmissao.requestFocus();
            } else {
                if (txtVencimento.getDate().equals("")) {
                    JOptionPane.showMessageDialog(this, "Campo Vencimento Mínima tem que ser informado!",
                            "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                    txtVencimento.requestFocus();
                } else {
                    pagamentos.setCodigo(codigoPagamento);
                    pagamentos.setStatus(0);

                    try {
                        dao.atualizaDados(pagamentos);
                        JOptionPane.showMessageDialog(this,
                                "Efetuado com sucesso!");

                        txtDescricao.setText("");
                        txtValor.setText("");
                        txtEmissao.setDate(null);
                        txtVencimento.setDate(null);

                        //Reiniciar tabela 
                        ContasRecebar.this.dispose();
                        ContasRecebar conta;
                        try {
                            conta = new ContasRecebar();
                            conta.setVisible(true);
                        } catch (BancoException ex) {
                            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    } catch (BancoException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    }
}//GEN-LAST:event_jBConcretizarPagamentoActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    Date a = txtEmissao.getDate();
    Date b = txtVencimento.getDate();
    if (a.compareTo(b) >= 1) {
        //System.out.println("A Maior");
        JOptionPane.showMessageDialog(this, "Data de Emissão é maior que a data de venciemnto!",
                "Atenção!", JOptionPane.INFORMATION_MESSAGE);
        txtEmissao.setDate(null);
        //txtVencimento.setDate(null);
    } else {
        //System.out.println("B Maior");


        if (txtDescricao.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Descrição tem que ser informado!",
                    "Atenção!", JOptionPane.INFORMATION_MESSAGE);
            txtDescricao.requestFocus();
        } else {
            if (txtEmissao.getDate().equals("")) {
                JOptionPane.showMessageDialog(this, "Campo Emissão tem que ser informado!",
                        "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                txtEmissao.requestFocus();
            } else {
                if (txtVencimento.getDate().equals("")) {
                    JOptionPane.showMessageDialog(this, "Campo Vencimento Mínima tem que ser informado!",
                            "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                    txtVencimento.requestFocus();
                } else {
                    txtDescricao.setText(txtDescricao.getText().trim());
                    pagamentos.setDescricao(txtDescricao.getText());

                    data = new SimpleDateFormat("dd/MM/yyyy").format(txtEmissao.getDate());
                    pagamentos.setEmissao(data);

                    data = new SimpleDateFormat("dd/MM/yyyy").format(txtVencimento.getDate());
                    pagamentos.setVencimento(data);

                    Total = txtValor.getText();
                    if (Total.contains(".")) {
                        Total = Total.replace(".", "");
                    }
                    if (Total.contains(",")) {
                        Total = Total.replace(",", ".");
                    }
                    pagamentos.setValor(Float.parseFloat(Total));

                    pagamentos.setStatus(1);

                    try {
                        dao.adicionarContaP(pagamentos);
                        JOptionPane.showMessageDialog(this,
                                "Cadastro efetuado com sucesso!");

                        txtDescricao.setText("");
                        txtValor.setText("");
                        txtEmissao.setDate(null);
                        txtVencimento.setDate(null);

                        //Reiniciar tabela 
                        ContasRecebar.this.dispose();
                        ContasRecebar conta;
                        try {
                            conta = new ContasRecebar();
                            conta.setVisible(true);
                        } catch (BancoException ex) {
                            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    } catch (BancoException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    }
}//GEN-LAST:event_jButton1ActionPerformed

private void jBAlterarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarDadosActionPerformed
    Date a = txtEmissao.getDate();
    Date b = txtVencimento.getDate();
    if (a.compareTo(b) >= 1) {
        //System.out.println("A Maior");
        JOptionPane.showMessageDialog(this, "Data de Emissão é maior que a data de venciemnto!",
                "Atenção!", JOptionPane.INFORMATION_MESSAGE);
        txtEmissao.setDate(null);
        //txtVencimento.setDate(null);
    } else {
        if (txtDescricao.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Descrição tem que ser informado!",
                    "Atenção!", JOptionPane.INFORMATION_MESSAGE);
            txtDescricao.requestFocus();
        } else {
            if (txtEmissao.getDate().equals("")) {
                JOptionPane.showMessageDialog(this, "Campo Emissão tem que ser informado!",
                        "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                txtEmissao.requestFocus();
            } else {
                if (txtVencimento.getDate().equals("")) {
                    JOptionPane.showMessageDialog(this, "Campo Vencimento Mínima tem que ser informado!",
                            "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                    txtVencimento.requestFocus();
                } else {
                    pagamentos.setCodigo(codigoPagamento);
                    txtDescricao.setText(txtDescricao.getText().trim());
                    pagamentos.setDescricao(txtDescricao.getText());

                    data = new SimpleDateFormat("dd/MM/yyyy").format(txtEmissao.getDate());
                    pagamentos.setEmissao(data);

                    data = new SimpleDateFormat("dd/MM/yyyy").format(txtVencimento.getDate());
                    pagamentos.setVencimento(data);

                    Total = txtValor.getText();
                    if (Total.contains(".")) {
                        Total = Total.replace(".", "");
                    }
                    if (Total.contains(",")) {
                        Total = Total.replace(",", ".");
                    }
                    pagamentos.setValor(Float.parseFloat(Total));

                    //produto.setStatus(1);

                    try {
                        dao.atualizaDados(pagamentos);
                        JOptionPane.showMessageDialog(this,
                                "Efetuado com sucesso!");
                        //Reiniciar tabela 
                        ContasRecebar.this.dispose();
                        ContasRecebar conta;
                        try {
                            conta = new ContasRecebar();
                            conta.setVisible(true);
                        } catch (BancoException ex) {
                            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } catch (BancoException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    }
}//GEN-LAST:event_jBAlterarDadosActionPerformed

private void jBSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSairActionPerformed
    ContasRecebar.this.dispose();
}//GEN-LAST:event_jBSairActionPerformed

private void masterTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseReleased
    int linha = masterTable.getSelectedRow();
    codigo = masterTable.getValueAt(linha, 0).hashCode();
    //nomeFornecedor = (String) (masterTable.getValueAt(linha, 1));
    try {
        pagamentos = dao.carregarContasPPeloCodigo(codigo + "");
        if (pagamentos.getDescricao().equals("nulo")) {
            JOptionPane.showMessageDialog(this,
                    "A conta informada não consta no banco!");
            txtDescricao.requestFocus();
        } else {
            codigoPagamento = pagamentos.getCodigo();
            txtDescricao.setText(String.valueOf(pagamentos.getDescricao()));
            data = pagamentos.getEmissao();
            DataAlterando(data, 1);
            data = pagamentos.getVencimento();
            DataAlterandoV(data, 1);

            Total = new DecimalFormat("0.00").format(Float.parseFloat("" + pagamentos.getValor()));
            //Total = "" + pagamentos.getValor();
            if (Total.contains(".")) {
                Total = Total.replace(".", "");
            }
            if (Total.contains(",")) {
                Total = Total.replace(",", "");
            }
            txtValor.setText(Total);

        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}//GEN-LAST:event_masterTableMouseReleased

private void jBSalvarRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarRActionPerformed
    Date a = txtEmissao1.getDate();
    Date b = txtVencimento1.getDate();
    if (a.compareTo(b) >= 1) {
        //System.out.println("A Maior");
        JOptionPane.showMessageDialog(this, "Data de Emissão é maior que a data de venciemnto!",
                "Atenção!", JOptionPane.INFORMATION_MESSAGE);
        txtEmissao1.setDate(null);
        //txtVencimento.setDate(null);
    } else {
        if (txtDescricao1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Descrição tem que ser informado!",
                    "Atenção!", JOptionPane.INFORMATION_MESSAGE);
            txtDescricao1.requestFocus();
        } else {
            if (txtEmissao1.getDate().equals("")) {
                JOptionPane.showMessageDialog(this, "Campo Emissão tem que ser informado!",
                        "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                txtEmissao1.requestFocus();
            } else {
                if (txtVencimento1.getDate().equals("")) {
                    JOptionPane.showMessageDialog(this, "Campo Vencimento Mínima tem que ser informado!",
                            "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                    txtVencimento1.requestFocus();
                } else {
                    txtDescricao1.setText(txtDescricao1.getText().trim());
                    recebimentos.setDescricao(txtDescricao1.getText());

                    data = new SimpleDateFormat("dd/MM/yyyy").format(txtEmissao1.getDate());
                    recebimentos.setEmissao(data);

                    data = new SimpleDateFormat("dd/MM/yyyy").format(txtVencimento1.getDate());
                    recebimentos.setVencimento(data);

                    Total = txtValor1.getText();
                    if (Total.contains(".")) {
                        Total = Total.replace(".", "");
                    }
                    if (Total.contains(",")) {
                        Total = Total.replace(",", ".");
                    }
                    recebimentos.setValor(Float.parseFloat(Total));

                    recebimentos.setStatus(1);

                    try {
                        daos.adicionarContaR(recebimentos);
                        JOptionPane.showMessageDialog(this,
                                "Cadastro efetuado com sucesso!");

                        txtDescricao1.setText("");
                        txtValor1.setText("");
                        txtEmissao1.setDate(null);
                        txtVencimento1.setDate(null);

                        //Reiniciar tabela 
                        ContasRecebar.this.dispose();
                        ContasRecebar conta;
                        try {
                            conta = new ContasRecebar();
                            conta.setVisible(true);
                        } catch (BancoException ex) {
                            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    } catch (BancoException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    }
}//GEN-LAST:event_jBSalvarRActionPerformed

private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    Date a = txtEmissao1.getDate();
    Date b = txtVencimento1.getDate();
    if (a.compareTo(b) >= 1) {
        //System.out.println("A Maior");
        JOptionPane.showMessageDialog(this, "Data de Emissão é maior que a data de venciemnto!",
                "Atenção!", JOptionPane.INFORMATION_MESSAGE);
        txtEmissao1.setDate(null);
        //txtVencimento.setDate(null);
    } else {
        if (txtDescricao1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Descrição tem que ser informado!",
                    "Atenção!", JOptionPane.INFORMATION_MESSAGE);
            txtDescricao1.requestFocus();
        } else {
            if (txtEmissao1.getDate().equals("")) {
                JOptionPane.showMessageDialog(this, "Campo Emissão tem que ser informado!",
                        "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                txtEmissao1.requestFocus();
            } else {
                if (txtVencimento1.getDate().equals("")) {
                    JOptionPane.showMessageDialog(this, "Campo Vencimento Mínima tem que ser informado!",
                            "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                    txtVencimento1.requestFocus();
                } else {

                    recebimentos.setCodigo(codigoRecebimento);

                    txtDescricao1.setText(txtDescricao1.getText().trim());
                    recebimentos.setDescricao(txtDescricao1.getText());

                    data = new SimpleDateFormat("dd/MM/yyyy").format(txtEmissao1.getDate());
                    recebimentos.setEmissao(data);

                    data = new SimpleDateFormat("dd/MM/yyyy").format(txtVencimento1.getDate());
                    recebimentos.setVencimento(data);

                    Total = txtValor1.getText();
                    if (Total.contains(".")) {
                        Total = Total.replace(".", "");
                    }
                    if (Total.contains(",")) {
                        Total = Total.replace(",", ".");
                    }
                    recebimentos.setValor(Float.parseFloat(Total));

                    //recebimentos.setStatus(1);

                    try {
                        daos.atualizaDados(recebimentos);
                        JOptionPane.showMessageDialog(this,
                                "Efetuado com sucesso!");
                        ContasRecebar.this.dispose();
                        ContasRecebar conta;
                        try {
                            conta = new ContasRecebar();
                            conta.setVisible(true);
                        } catch (BancoException ex) {
                            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } catch (BancoException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    }
}//GEN-LAST:event_jButton5ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    txtDescricao.setText("");
    txtValor.setText("");
    txtEmissao.setDate(null);
    txtVencimento.setDate(null);
}//GEN-LAST:event_jButton3ActionPerformed

private void jBLimparRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimparRActionPerformed
    txtDescricao1.setText("");
    txtValor1.setText("");
    txtEmissao1.setDate(null);
    txtVencimento1.setDate(null);
}//GEN-LAST:event_jBLimparRActionPerformed

private void jBConcretizarRecebimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConcretizarRecebimentoActionPerformed
    Date a = txtEmissao1.getDate();
    Date b = txtVencimento1.getDate();
    if (a.compareTo(b) >= 1) {
        //System.out.println("A Maior");
        JOptionPane.showMessageDialog(this, "Data de Emissão é maior que a data de venciemnto!",
                "Atenção!", JOptionPane.INFORMATION_MESSAGE);
        txtEmissao1.setDate(null);
        //txtVencimento.setDate(null);
    } else {
        if (txtDescricao1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Descrição tem que ser informado!",
                    "Atenção!", JOptionPane.INFORMATION_MESSAGE);
            txtDescricao1.requestFocus();
        } else {
            if (txtEmissao1.getDate().equals("")) {
                JOptionPane.showMessageDialog(this, "Campo Emissão tem que ser informado!",
                        "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                txtEmissao1.requestFocus();
            } else {
                if (txtVencimento1.getDate().equals("")) {
                    JOptionPane.showMessageDialog(this, "Campo Vencimento Mínima tem que ser informado!",
                            "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                    txtVencimento1.requestFocus();
                } else {
                    recebimentos.setStatus(0);

                    try {
                        daos.atualizaDados(recebimentos);
                        JOptionPane.showMessageDialog(this,
                                "Efetuado com sucesso!");

                        txtDescricao1.setText("");
                        txtValor1.setText("");
                        txtEmissao1.setDate(null);
                        txtVencimento1.setDate(null);

                        //Reiniciar tabela 
                        ContasRecebar.this.dispose();
                        ContasRecebar conta;
                        try {
                            conta = new ContasRecebar();
                            conta.setVisible(true);
                        } catch (BancoException ex) {
                            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    } catch (BancoException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    }
}//GEN-LAST:event_jBConcretizarRecebimentoActionPerformed

private void masterTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTable1MouseReleased
    int linha = masterTable1.getSelectedRow();
    codigo = masterTable1.getValueAt(linha, 0).hashCode();
    //nomeFornecedor = (String) (masterTable.getValueAt(linha, 1));
    try {
        recebimentos = daos.carregarContasRPeloCodigo(codigo + "");
        if (recebimentos.getEmissao().equals("nulo")) {
            JOptionPane.showMessageDialog(this,
                    "A conta informada não consta no banco!");
            txtDescricao1.requestFocus();
        } else {
            codigoRecebimento = recebimentos.getCodigo();
            txtDescricao1.setText(String.valueOf(recebimentos.getDescricao()));
            data = recebimentos.getEmissao();
            DataAlterandoER(data, 1);
            data = recebimentos.getVencimento();
            DataAlterandoVR(data, 1);

            //Total = "" + recebimentos.getValor();
            Total = new DecimalFormat("0.00").format(recebimentos.getValor());
            if (Total.contains(".")) {
                Total = Total.replace(".", "");
            }
            if (Total.contains(",")) {
                Total = Total.replace(",", "");
            }
            txtValor1.setText(Total);
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}//GEN-LAST:event_masterTable1MouseReleased

private void jBSairRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSairRActionPerformed
    ContasRecebar.this.dispose();
}//GEN-LAST:event_jBSairRActionPerformed
    /**
     * @param args the command line arguments
     */
    public DefaultTableModel getDadosTabelaClientePesquisa() {
        try {

            ContasPagarDAO dao = new ContasPagarDAO();
            List<ContasPagar> lista = dao.pesquisaP(parametroPesquisa, campo);
            int numeroContatos = lista.size();
            int numeroColunas = 7;

            Object[][] dados = new Object[numeroContatos][numeroColunas];

            for (int us = 0; us < lista.size(); us++) {
                dados[us][0] = lista.get(us).getCodigo();
                dados[us][1] = lista.get(us).getDescricao();
                dados[us][2] = lista.get(us).getEmissao();
                dados[us][3] = lista.get(us).getVencimento();
                dados[us][4] = lista.get(us).getValor();
                //txtValor.setText(Total);
                //Total = String.valueOf(pagamentos.getStatus());
                Total = String.valueOf(lista.get(us).getStatus());
                if (Total.equals("0")) {
                    //masterTable.setSelectionForeground(Color.red);
                    dados[us][5] = "Pago";
                } else {
                    //masterTable.setForeground(Color.white);
                    dados[us][5] = "Não Pago";
                }

            }

            String[] nomeColunas = {"Código", "Descrição", "Emissão", "Vencimento", "Valor", "Situação"};
            return new DefaultTableModel(dados, nomeColunas) {
                public boolean isCellEditable(int rowIndex, int mColIndex) {
                    return false;
                }
            };
        } catch (BancoException e) {
            JOptionPane.showMessageDialog(null, e);
            return null;
        }
    }

    public DefaultTableModel getDadosTabelaPesquisaReceber() {
        try {

            ContasReceberDAO dao = new ContasReceberDAO();
            List<ContasReceber> lista = dao.pesquisaR(parametroPesquisa, campo);
            int numeroContatos = lista.size();
            int numeroColunas = 7;

            Object[][] dados = new Object[numeroContatos][numeroColunas];

            for (int us = 0; us < lista.size(); us++) {
                dados[us][0] = lista.get(us).getCodigo();
                dados[us][1] = lista.get(us).getDescricao();
                dados[us][2] = lista.get(us).getEmissao();
                dados[us][3] = lista.get(us).getVencimento();
                dados[us][4] = lista.get(us).getValor();
                //txtValor.setText(Total);
                //Total = String.valueOf(pagamentos.getStatus());
                Total = String.valueOf(lista.get(us).getStatus());
                if (Total.equals("0")) {
                    //masterTable.setSelectionForeground(Color.red);
                    dados[us][5] = "Pago";
                } else {
                    //masterTable.setForeground(Color.white);
                    dados[us][5] = "Não Pago";
                }

            }
            dao.desconectar();
            String[] nomeColunas = {"Código", "Descrição", "Emissão", "Vencimento", "Valor", "Situação"};
            return new DefaultTableModel(dados, nomeColunas) {
                public boolean isCellEditable(int rowIndex, int mColIndex) {
                    return false;
                }
            };

        } catch (BancoException e) {
            JOptionPane.showMessageDialog(null, e);
            return null;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlterarDados;
    private javax.swing.JButton jBConcretizarPagamento;
    private javax.swing.JButton jBConcretizarRecebimento;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBExcluirR;
    private javax.swing.JButton jBLimparR;
    private javax.swing.JButton jBSair;
    private javax.swing.JButton jBSairR;
    private javax.swing.JButton jBSalvarR;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable masterTable;
    private javax.swing.JTable masterTable1;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtDescricao1;
    private com.toedter.calendar.JDateChooser txtEmissao;
    private com.toedter.calendar.JDateChooser txtEmissao1;
    private javax.swing.JTextField txtValor;
    private javax.swing.JTextField txtValor1;
    private com.toedter.calendar.JDateChooser txtVencimento;
    private com.toedter.calendar.JDateChooser txtVencimento1;
    // End of variables declaration//GEN-END:variables
}
