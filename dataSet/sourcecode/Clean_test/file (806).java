/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package TitanMusicPlayerGUI;

import TitanMusicPlayer.bll.Account;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author AJ Green <ajgreenmail@gmail.com>
 */
public class CreateAccount extends javax.swing.JFrame {

    public Account account = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usernameLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        passwordField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        directionsArea = new javax.swing.JTextArea();
        usernameError = new javax.swing.JLabel();
        emailError = new javax.swing.JLabel();
        passwordError1 = new javax.swing.JLabel();
        passwordError2 = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Create New User");
        setMinimumSize(new java.awt.Dimension(282, 400));
        setResizable(false);

        usernameLabel.setText("Username:");

        emailLabel.setText("Email:");

        passwordLabel.setText("Password:");

        usernameField.setAutoscrolls(false);

        directionsArea.setEditable(false);
        directionsArea.setColumns(20);
        directionsArea.setLineWrap(true);
        directionsArea.setRows(5);
        directionsArea.setText("Please enter a user name, email, and password.\nThe email must be valid.\nThe password needs to have at least one each of: letter, number, and special character");
        directionsArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(directionsArea);

        usernameError.setForeground(new java.awt.Color(255, 0, 0));
        usernameError.setText("Username required.");

        emailError.setForeground(new java.awt.Color(255, 0, 0));
        emailError.setText("Email not valid. ");

        passwordError1.setForeground(new java.awt.Color(255, 0, 0));
        passwordError1.setText("Password must contain one letter,");

        passwordError2.setForeground(new java.awt.Color(255, 0, 0));
        passwordError2.setText("one number and one special character.");

        createButton.setText("CREATE");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("CANCEL");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(createButton)
                        .addGap(30, 30, 30)
                        .addComponent(cancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(emailError))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(usernameError))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(emailLabel)
                                        .addComponent(passwordLabel))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(passwordField)
                                        .addComponent(emailField)))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(usernameLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(usernameField))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(passwordError2)
                                        .addComponent(passwordError1)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(usernameError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordError1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordError2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(cancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        usernameError.setVisible(false);
        emailError.setVisible(false);
        passwordError1.setVisible(false);
        passwordError2.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        //Cancel user creation and close
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        //Validate input and add user if good, warn if not
        boolean errorFound = false;        //Flag if error found
        final String INVALID_EMAIL = "Email not valid.";
        final String EMAIL_REQUIRED = "Email is required.";
        final String PASSWORD_REQUIRED1 = "Password is required.";
        final String PASSWORD_REQUIRED2 = "";
        final String PASSWORD_INVALID1 = "Password must contain one letter,";
        final String PASSWORD_INVALID2 = "one number, and one special character.";
        
        
        //Force error messages invisible for multiple tries
        usernameError.setVisible(false);
        emailError.setVisible(false);
        passwordError1.setVisible(false);
        passwordError2.setVisible(false);
        
        //Username cannot be empty
        if(usernameField.getText().isEmpty()){
            usernameError.setVisible(true);
            errorFound = true;
        }
        
        //Email cannot be empty
        if(emailField.getText().isEmpty()){
            emailError.setText(EMAIL_REQUIRED);
            emailError.setVisible(true);
            errorFound = true;
        }
        //If email not empty, test for validity
        else {
            //Email must be valid - some.thing@somewhere.com
            if(!isEmailValid(emailField.getText())){
                emailError.setText(INVALID_EMAIL);
                emailError.setVisible(true);
                errorFound = true;
            }
        }
        
        //Password cannot be empty
        if(passwordField.getText().isEmpty()){
            passwordError1.setText(PASSWORD_REQUIRED1);
            passwordError1.setVisible(true);
            errorFound = true;
        }
        //If password not empty, test for validity
        else {
            //Password must contain letter, number, and special character
            if(!isPasswordValid(passwordField.getText())){
                passwordError1.setText(PASSWORD_INVALID1);
                passwordError2.setText(PASSWORD_INVALID2);
                passwordError1.setVisible(true);
                passwordError2.setVisible(true);
                errorFound = true;
            }      
        }
        
        if(errorFound==false){
            //Store user info in account
            account.setEmail(emailField.getText());
            account.setPassword(passwordField.getText());
            account.setUsername(usernameField.getText());

            //Pass to db to store user
            createUserInDB(account);
            
            JOptionPane.showMessageDialog(null, "Logged in as " + account.getUsername());
            //Close dialog
            this.dispose();
        }
        
    }//GEN-LAST:event_createButtonActionPerformed

    private boolean isEmailValid(String e){
        //{Letters,Numbers,Period}@{LNP}.{2-3L}
        final String regex = "^[\\w][\\w.]*@[\\w]+.[\\w]{2,}$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(e);
        return matcher.matches();
    }
    
    private boolean isPasswordValid(String e){
        //At least 1 each Letter, Number, Spec. Character
        //Letter pattern
        Pattern letterPat = Pattern.compile("[\\w[^\\d_]]");
        Matcher letterMat = letterPat.matcher(e);
        //Number pattern
        Pattern numberPat = Pattern.compile("\\d");
        Matcher numberMat = numberPat.matcher(e);
        //Special Char pattern
        Pattern specialPat = Pattern.compile("\\W");
        Matcher specialMat = specialPat.matcher(e);
        
        return letterMat.find()&&numberMat.find()&&specialMat.find();
    }
    
    //Creates user in the db for later login
    private void createUserInDB(Account a) {
        //Will be used to send user info to DB once DB is configured
        //Message Pane to show info now
        JOptionPane.showMessageDialog(null, "Username :" + a.getUsername() +
                "\nEmail: "+ a.getEmail() + "\nPassword: " + a.getPassword());
    }
    
    //Constructor with passed account
    public CreateAccount(Account a){
            account = a;
            initComponents();
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton createButton;
    private javax.swing.JTextArea directionsArea;
    private javax.swing.JLabel emailError;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel passwordError1;
    private javax.swing.JLabel passwordError2;
    private javax.swing.JTextField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel usernameError;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
