
package org.kuali.rice.location.v2_0;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.kuali.rice.core.v2_0.QueryByCriteriaType;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "CountryService", targetNamespace = "http://rice.kuali.org/location/v2_0")
@XmlSeeAlso({
    org.kuali.rice.location.v2_0.ObjectFactory.class,
    org.kuali.rice.core.v2_0.ObjectFactory.class
})
public interface CountryService {


    /**
     * 
     * @param code
     * @return
     *     returns org.kuali.rice.location.v2_0.CountryType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "country", targetNamespace = "http://rice.kuali.org/location/v2_0")
    @RequestWrapper(localName = "getCountry", targetNamespace = "http://rice.kuali.org/location/v2_0", className = "org.kuali.rice.location.v2_0.GetCountry")
    @ResponseWrapper(localName = "getCountryResponse", targetNamespace = "http://rice.kuali.org/location/v2_0", className = "org.kuali.rice.location.v2_0.GetCountryResponse")
    public CountryType getCountry(
        @WebParam(name = "code", targetNamespace = "http://rice.kuali.org/location/v2_0")
        String code)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @return
     *     returns org.kuali.rice.location.v2_0.FindAllCountriesResponse.Countries
     */
    @WebMethod
    @WebResult(name = "countries", targetNamespace = "http://rice.kuali.org/location/v2_0")
    @RequestWrapper(localName = "findAllCountries", targetNamespace = "http://rice.kuali.org/location/v2_0", className = "org.kuali.rice.location.v2_0.FindAllCountries")
    @ResponseWrapper(localName = "findAllCountriesResponse", targetNamespace = "http://rice.kuali.org/location/v2_0", className = "org.kuali.rice.location.v2_0.FindAllCountriesResponse")
    public org.kuali.rice.location.v2_0.FindAllCountriesResponse.Countries findAllCountries();

    /**
     * 
     * @return
     *     returns org.kuali.rice.location.v2_0.FindAllCountriesNotRestrictedResponse.CountriesNotRestricted
     */
    @WebMethod
    @WebResult(name = "countriesNotRestricted", targetNamespace = "http://rice.kuali.org/location/v2_0")
    @RequestWrapper(localName = "findAllCountriesNotRestricted", targetNamespace = "http://rice.kuali.org/location/v2_0", className = "org.kuali.rice.location.v2_0.FindAllCountriesNotRestricted")
    @ResponseWrapper(localName = "findAllCountriesNotRestrictedResponse", targetNamespace = "http://rice.kuali.org/location/v2_0", className = "org.kuali.rice.location.v2_0.FindAllCountriesNotRestrictedResponse")
    public org.kuali.rice.location.v2_0.FindAllCountriesNotRestrictedResponse.CountriesNotRestricted findAllCountriesNotRestricted();

    /**
     * 
     * @param query
     * @return
     *     returns org.kuali.rice.location.v2_0.CountryQueryResultsType
     * @throws RiceIllegalArgumentException
     */
    @WebMethod
    @WebResult(name = "results", targetNamespace = "http://rice.kuali.org/location/v2_0")
    @RequestWrapper(localName = "findCountries", targetNamespace = "http://rice.kuali.org/location/v2_0", className = "org.kuali.rice.location.v2_0.FindCountries")
    @ResponseWrapper(localName = "findCountriesResponse", targetNamespace = "http://rice.kuali.org/location/v2_0", className = "org.kuali.rice.location.v2_0.FindCountriesResponse")
    public CountryQueryResultsType findCountries(
        @WebParam(name = "query", targetNamespace = "http://rice.kuali.org/location/v2_0")
        QueryByCriteriaType query)
        throws RiceIllegalArgumentException
    ;

    /**
     * 
     * @param alternateCode
     * @return
     *     returns org.kuali.rice.location.v2_0.CountryType
     * @throws RiceIllegalArgumentException
     * @throws RiceIllegalStateException
     */
    @WebMethod
    @WebResult(name = "country", targetNamespace = "http://rice.kuali.org/location/v2_0")
    @RequestWrapper(localName = "getCountryByAlternateCode", targetNamespace = "http://rice.kuali.org/location/v2_0", className = "org.kuali.rice.location.v2_0.GetCountryByAlternateCode")
    @ResponseWrapper(localName = "getCountryByAlternateCodeResponse", targetNamespace = "http://rice.kuali.org/location/v2_0", className = "org.kuali.rice.location.v2_0.GetCountryByAlternateCodeResponse")
    public CountryType getCountryByAlternateCode(
        @WebParam(name = "alternateCode", targetNamespace = "http://rice.kuali.org/location/v2_0")
        String alternateCode)
        throws RiceIllegalArgumentException, RiceIllegalStateException
    ;

    /**
     * 
     * @return
     *     returns org.kuali.rice.location.v2_0.CountryType
     */
    @WebMethod
    @WebResult(name = "country", targetNamespace = "http://rice.kuali.org/location/v2_0")
    @RequestWrapper(localName = "getDefaultCountry", targetNamespace = "http://rice.kuali.org/location/v2_0", className = "org.kuali.rice.location.v2_0.GetDefaultCountry")
    @ResponseWrapper(localName = "getDefaultCountryResponse", targetNamespace = "http://rice.kuali.org/location/v2_0", className = "org.kuali.rice.location.v2_0.GetDefaultCountryResponse")
    public CountryType getDefaultCountry();

}
