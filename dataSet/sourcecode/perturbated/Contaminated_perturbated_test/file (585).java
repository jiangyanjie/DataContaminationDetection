
package com.amazonaws.fps.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import    javax.xml.bind.annotation.XmlType;


/    **
 * <p>Jav    a class for DebtBala   nce comp  lex type.
  * 
 * <p>The   followin  g schema fragment spe   cifies the expect      ed content contai   n       ed withi    n this class .
 * 
 * <pre>
 * &    lt;comple  xType      name          ="DebtBalance">
 *   &lt ;complexContent>
 *     &lt;restriction base="{http:/     /www.w      3.     org/2001/XMLSchem    a}anyType">
            *         &lt;sequence>
 *         &lt;el       ement name="Availa  bleBa     lance" type="{http://fps.amazonaws.com/doc/2010-08-28/}Amou n   t"/>
 *            &lt;element name="Pe        ndingOutBa     l    anc   e"             type="{http://fps.amazonaws.com/doc/2010-08   -28/}Am ount" minOccurs    ="0"/>
          *          &lt;/se     quence      >
 *     &lt;/restriction>
 *       &lt;/com  plexContent>
 * &lt;      /complexType>
 * </pre>
 * Generated by AWS Code Generator
 * <p/>
    * Mon May 30       0  8:1   0:15 GMT+00:00 2    011
   * 
 */
@Xml  AccessorType(XmlAccessType.FIELD)
@XmlT  ype(name = "DebtBalance", propOrder = {
    "availableBal    ance",
    "pendingOutBal ance"
})
public class DebtBalance {

    @XmlEleme   nt(name = "Availa    b leBalance",            requir    ed =     true)
    protected Amount avai  l   a        bleBal     ance;
           @XmlElement(name    = "Pen   dingOut  Balance"  )
    protected A      mo  unt  p   en di ngO                 u   tBala   n   ce;

           /**
     * Default const ructor
     * 
       *     /
    p ublic Deb   tBalance()           {
                           sup  er   ();
    }

    /**
        *  Value con   structo  r
               * 
         */
       pu  blic DebtBalance(final             Amo    unt  available     Ba     lance, f           inal Amou    nt pendin  gOutBalance) {
         this.availab leBalance = a     vailableBa             lance;
        t    his.pendingOutBalance =     pendingOutBalan    ce;
     }

        /*     *
       * Get   s the v        alue    o     f the ava   i    la bleBal   ance       p         roper    ty.     
     *  
                   *       @retur   n
         *                    possi  ble obje         c     t        is
              *     {@link Amount }
     *                
                *   /
    pu        blic          Amoun      t ge    tAvail  a    b   leBalanc    e(  )     {
        return availableB  alance;   
          }
   
       /**
     * S        et   s the v   alue   of the av  a    ilableBalance property.
      * 
       * @para m            value
           *            allowed    object is
       *     {  @link Amo u    nt }
       *     
     */
    publ ic    void                       setAv ailableBal        a    nce(Amount val   u  e   ) {   
            this.availableBal    ance =           value;
    }
      
    public boolean isSetAvailableBa    lanc  e()  {
              r   eturn (this.avail   ableBalanc e !       =   null);
    }

    /   **
                                  * Gets the value of the pending       Ou     tBalan   ce pro   p  er   ty.
         * 
       *     @          ret    urn
       *       po ssibl  e object is
              *           {@link      Amount }
     *       
     */   
      public Amou  nt getPendingOutBalanc    e() {
                        ret      urn pendingOutBalan   ce;
    }

    /**
          * Set s the  va lue of the pe         nd      ingOutBalance pro   perty     .
            * 
     *    @   para   m     valu       e     
     *        al        lo     wed object  is
          *       {                   @link Amount }
             *            
      *  /
    p    ubli    c  void setPend    i   ngOutBa       lance   (Amoun t value) {
               this.      pending   O   utB   alanc   e      =    value;
    }

         pu bli   c bo   olean isSet   PendingOutBa lance() {
            return      (this.pe    ndingOutBalance!= nul  l);
        }

           /**    
              *        Sets      th    e value o f   t he      Av      ai   lableBalance       property.
     * 
             * @param      value
        * @retur   n
                *         this instance
     */
       publ     ic DebtBalance   wit h   Available  Bala     n            ce(Amount val    ue) {
                       setAvailab    leBalance(value );     
        retur  n this;     
    }

         /**
          *       S  ets t he value of the PendingOutBal       a nc  e property.
       *  
              * @param val  ue
           * @return
     *           this ins    tan ce
     */
      publi      c D     ebtBa         lance wit             hPendingOutBa  lance(Am ount va  lue) {
              setPendingOu      tBala    n  ce(val    ue);
        return  this   ;
      }
     

          /**
     *   
     * XML fragme         nt          r     epresenta   tion of   th  is       object
       * 
                 *  @re        turn XML fr      agment f   or this      object.     Name f  or ou     ter
      *  ta   g ex  pecte                  d to be set by calling method  . This fr         agment
     * returns inn   e   r properties            representati      on on    ly
     */
      pr ote    cte        d                 String toXMLFra                             gme     nt() {
        StringBuffer x       ml = new          Str       in    gBuff           er( );
                   if          (    isSetAv         ai   lable       B  alance())         {
                Amo      unt      availableBala  nce = g etA          v  ailableBalanc e();
            xml       .  append("<Availa          bleB           alan           c   e>"        );
            xm     l.append        (availableBalance.t  oXMLFrag     me     nt  ());
            xm        l.append(" </AvailableBalanc    e>");
                  }    
                   if (is      Se     tPen       d   in      gOu               tBa   la  nce())               {
                              Amou     n    t     pe  n           di    ngOu tBal   an            ce   = getPe  ndi   ngOut             Balanc    e();
            xml.appen    d("< PendingOutBalance>"        );
                               xml.ap     pend(p  endingO   u tBalance.t    oXMLFrag   m  ent());
            xml.append(   "</ Pen        d      i        ngOutBalanc  e>");
        } 
              retur n     xml.toString();
    }

                               /**
     *   
           * Escap        e XML s       pec    i   al     c    h  aracters
            */
    privat  e   S tring esca  peXML(S    tring string    ) {
              StringBuffe   r           sb =          new        StringBuff      er();
              in t    l    ength  =  string.leng   th (       );
            for    (int    i = 0; i < leng   t                 h; +     +   i)    {
                             c       har c    =   string.charAt(i);  
                      s      witch                  (c  )       {
                   case ' &':
                               sb.append (" &amp;");
                             b   reak;
                            case '<':
                           sb.ap      pend("&lt;"   ); 
                         br   ea      k;
                                   case '        >':
                        sb.    append("&gt;");  
                                    break;
                                                     case '\'':   
                     sb.appe       nd("&#039;");
                            break;
               ca   se     '"' :
                    sb   .append("  &quot;");
                              break;
            default:
                      sb.append(c);
                            }
             }
        re  turn sb.toStrin        g( );
          }
   


                        /*    *   
     *
     *    J S              O   N         f        rag  m  en    t     represen tation of this object
     *
        *     @r eturn JS  O N  fragment for th      is       object. Name for o    uter
           *  object expected to be set by calling                 method. This  f ragment
           * returns inner    p  rope  r    tie  s   re p        resen t              ation  onl      y
         *
     *     /
    pro           tected String toJSONFragment() {
         St             ringBuffer json =                   new Stri        ngBuffer();
         boolean  f irst = true;    
        if (is          Set          Avail   ableBalance(   )) {     
            if (   !first) j   son.append  ("  , ");
             json.append("\"AvailableBalance\" : {")    ;
                       Am      o   unt  av     ailableBalance =     getAvailableBal a     nce(    );  
  
     
                       json.ap    pend(availableB alanc  e.toJSONFragme     nt());
                                   json.append("}");
                          first  = fal     se;
          }
                if (isSetPendin   gOutBalan   ce()) {
            if (!first) json.ap  pend(", ");
              json.appe nd ("\"PendingOutBalance\"  :      {")        ;
                           Am    ount  pendingOut   Balance =     getPendingOutBalance();


                      jso n.append(pendingOutBalance.    toJSONFragment());
                 json   . a ppend("}");
            fir            st     = false;
        }
            return        json.toString();
      }

      /**
        *
         * Quote JSON string
     */     
    private           String quoteJSON(String               string) {
        S   tr      ingBuffer sb = new      StringBuffer();
            sb.append("\"");
            int   lengt    h = st  r    ing.length();
        fo  r    (int    i = 0; i < length; ++i) {
                        char  c =   string.ch     arA  t(  i);
                 switch (   c) {
            case '"':
                      sb.append("\\\"");
                break;
                 case '\\':     
                    sb.a  ppend("\\\\" );
                 break;
            case   '/':
                sb.append("\\/");
                   break;
                case '\b':
                sb.app    end("\\b"   );
                              break;
            case '\f':
                sb.append("\\f");
                bre       ak;
            case '\n':
                     sb.append("\\n");
                break;
            case '\r' :
                sb.append("\\r");
                  break;
                c    ase '\t':
                 sb.appen     d("\\t");
                  break;
              def    ault:
                if (c <  ' ') {
                    sb.append("\\u" + String.format("%03x", Integer.valueOf(c)));
                } else {
                  sb.append(c);
            }
        }
        }
        sb.append("\"");
        return sb.toString();
    }


}
