/*    Generated By:JavaCC: Do not edit this li  ne. DBInterpreterConstants  .java */
package edu.purdue.cs448.DBMS;


/   *    *
          * T oken lit    eral values and co    nstants.
     * Generated by   org.javacc.parser.OtherFilesGen#start()
 */
publi  c interface    DBInterpreterConstants {

  /**  End of File       . */
  int EOF = 0;
       /** Reg   ularExp   r   es      sion I  d. */
  in  t KWORD_SELECT = 7;
    /** RegularExpressi    on Id. */
  int KWORD_INSERT = 8;
  /    ** RegularExpression Id. */
  int KWOR    D_    UPDATE = 9;
  /** RegularExp res   sion Id. */
  int KW   ORD_CRE    ATE =   10;
  /*     * R    egularExpression Id. */
  int KWORD_DELETE = 11;
    /*  *   Regul     ar Exp     ression I d. */
     i    nt KWORD_D   ROP =  12;
      /** RegularEx    pression Id. */
  int KWO RD_FROM = 13;
  /** RegularE    xp       res sion Id. */
  int    KWORD_WHERE    = 1    4;
  /** RegularExpress        ion Id. */
       int KWORD_INTO = 15;
   /** Reg  ularExpres   sion Id. *  /
  i   nt KWORD_  TABLE     = 16;
  /** RegularE    xpression    I d. */
  int KWORD_VALUES = 17;
  /** RegularE   xpressio     n      Id. */
  int KW  ORD_SET = 18;
    /** RegularExpression Id.    */
  int    KWORD_AND = 19;
    /**    RegularExp  ress     ion Id. */
  int K  WORD_OR = 20      ;
  /*   *      RegularExpression    Id            . */  
  int KWORD_CHEC      K = 21  ;
  /** Re    gularE    xpression Id. *           /
  int KWORD_PRIMARY = 22   ;
  /** Regula     rExpressio     n Id. */
  int       KWORD_KEY = 23;
  /      ** RegularE  xpre          s   sion Id. *    /                 
       int  KWORD_REF = 24;
     /** RegularExpression I d. */   
  int KWOR    D_FOR    EIGN = 2    5;
  /**    RegularExpressio   n Id. */
  int KWORD_HELP = 26;
  /** Reg u l   a   rExpression I   d  . */
   int KWORD_D ESCRIBE =       27;
  /** RegularExpr   ession         Id. */
  i   n       t KWORD_CHAR = 28;
  /** RegularExpr  e   ss    ion Id. * /
  int KWORD_INT =          29;
  /** Regular  Expr     ession     Id. */   
     int KWORD      _DECIMA    L    =     30        ;
  /**     R   egul    arExpression Id. */
  int K  WORD_QUIT = 31;
   /** Reg  ularE  xpression Id. */
  int KW ORD_TABLES    = 32;
  /** Regul    arExpression Id.     */
  int KWORD_USER = 33;
  /** RegularEx    pression Id. */
  int KWORD_SUBSCHEMA    = 34;  
       /  ** RegularE  xpression Id. * /
  i nt SYM_LPARENTHESE       = 35;
            /** RegularExp   ress  ion Id. *    /
  int SYM  _RP      ARENTHESE =   36;  
  /*      *      Re           gularE    xpr ession Id. */
  int SYM_SE     MIC OLON = 37;
    /** RegularExpression Id. */
  int SY    M_EQ      UAL =    38;
  /** Re     gularExpression Id. *     /
  int SYM_LESS = 39;
  /    ** RegularExpre     ssion Id. */
  i     nt SYM_LESS   EQUAL =      40;
  /       **   Re  gularExpr      ess      ion   Id. */
  int SYM_NOTEQUAL    = 41;  
         /** RegularExpression I d.      */
  in      t S YM_GREATER =   42    ;
  /** Reg ularExpre   s    sion Id. */
  int SYM_GRE      AT     ERE      QUAL =   43;  
  /** RegularE    x    pression Id         . */ 
  int SYM_PLUS = 44;
  /** R  egularExpression Id. */
    i         n     t SYM_MINUS   = 45;
  /** Regula  rEx    p  ression Id  . */
  int SYM_ASTERISK = 46;
   /** RegularExpression Id . *      /
  int SYM_SLASH = 47;
  /   ** RegularEx    pr   ession Id. */
  int SYM_PERC    ENT =  48;
        /**     Re   gularExpressio n I    d. */
                  int  SYM_COMM      A = 49;    
  /     ** RegularExpression Id. */
  int IDE     N TIFIER = 50;
        /** Re    gularExpression Id. */
  in t IN      T_LITERAL     =   51;
  /** Reg  ula  rExpr          ession Id.     *   /
  int FLOA TING_POINT_LITERAL = 52;
     /**      RegularExpression     Id. */
  int EXPONENT = 53;
  /** RegularE     xpre     ss ion       Id. */
  int   STRING_DQUOTE_L ITERAL = 54;
  /** Reg  ularE   xpre     ssion Id    . */
  int STRING_LITERAL = 55;

  /*      * Lexical state. */
  int DE     FAU         LT  =     0;

   /*   * Literal   token valu   e    s. */
  String[] to kenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
        "\"    \\    n\"",
       "\"\\r\"",
       "\"\\f\"",
     "<token of kin  d 6>",
    "\"SELECT\"",
    "\"   INSERT\"     ",
    "\"UPDATE\"",
      "      \"CREATE\"       ",              
    "\"DELE    TE\"               ",
    "\"DROP\"  ",
          "\"FROM               \"",
    "\"W HERE\"",
    "\"INTO\"",
          "\   "TABLE\"",
    "\"VALUES\"",
    "\"SET\"",
    "\   "AND\"",
       "\"OR\"",
    "\"C  HECK\""     ,
    "\"PRIMARY\"",
    "\" KEY\"",
    "\"REFERENC  ES\"",
    "\"FOR EIGN\"",
    "\"HELP\"",    
    "\"DESCRIBE\"",     
    "\"CHAR\"",
        "\"INT \"",   
    "\     "DECIMAL\"",
    "\"QUIT\"",
    "\"TABLES\"",
    "\"USER\"    ",
    "\"SUBSCHEMA\"",
    "\"(\"",
       "\")\"",
    "\";\"",
    "\"=\"", 
        "\"<\"",
    "\"<=\"",
    "\"!=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
       "\"*\""    ,
    "\"/\"",
    "\"%\"",
    "\",\"",
    "<IDENTIFIER>",
    "<INT_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<STRING_DQUOTE_LITERAL>",
    "<STRING_LITERAL>",
    "\"USER-A\"",
    "\"USER-B\"",
  };

}
