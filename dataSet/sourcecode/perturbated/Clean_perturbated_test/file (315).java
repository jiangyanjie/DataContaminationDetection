package seker.algorithm.gobang.ai;

import     seker.algorithm.gobang.chessboard.Direction;

/**
   * ææ¡çº¿ï¼è½ ç¹1 + ä¸¤ä¸ªæ¹å8(åè¿4+å é4)   = å±9ä¸ªCellä¸ºèèè  å´
          * 
 * @author sek     er
 */
e  n    um AI9      {

    /**
         * å¨ä¸å¯è½æä¸º5çåæ¡çº¿åè½å­ï¼æ¯«æ æä¹ï¼ï¼å¯¹æ¹æ é¡»       ï¼  çè³æ ç©ºæ ¼ï¼é²å®       ã
          */      
    AI9_0(1) ,

    /**
     * å·²æ1çCellï¼å¯¹æ    ¹1æ­¥é   ²å®ä¹åï¼æ­¤9   ä¸ªCellåè¿     å©0
      */
    AI9_1_0((AI9_0.weight + 1) * Direction  .DIRECTIONS.l ength  ),  

     /**
     * å       ·²æ1ç         Cellï¼å¯¹æ¹       1æ­¥é²å®ä¹å    ï¼æ­¤9ä¸ª    Ce  l     låè¿    å©1
            * 
     * 2*AI9_1_0æ¯ä¸¤ ä¸ª æ¹ åä¸çä¸¤ä¸ªAI9_1_0  ï  ¼
         * è AI9_1  _1æ¯ç¸åæ¹          åä  ¸çä¸¤ä¸ ªAI9_1_0ï   ¼
      *      /
    AI9_     1_1            (AI9_1_0    .weight * 2  )    ,

    /**
     * å·²æ    2çCellï    ¼å¯¹æ¹1æ­¥é    ²å®ä¹å         ï¼    æ­¤9ä¸ªCellåè¿å©      0
     */
    AI9_2_0((AI9_1_1.weig   ht + 1)        * 2)    ,

    /**
     * å·²æ2ç     Ce  ll  ï¼å¯¹æ¹1æ­¥é²å®ä¹                  åï¼æ­¤9ä¸ªCellåè¿ å©1
        */
    AI9_2_1(AI9_2_0.we  ight + A      I9_1   _0.wei   ght),

    /**
       * å·²æ2çCellï¼ å¯¹æ      ¹1æ­¥é²å®ä¹åï¼æ­¤9ä¸ªCellåè¿å©2
               * 
     * 2*AI9_2_0     æ    ¯ä¸¤ä¸   ª æ¹åä¸çä¸¤ä¸ªAI9_2_0ï¼
     * è A   I9_2_   2æ¯ç¸åæ¹å   ä¸çä¸¤ä¸ªAI9_2_0ï¼
        */
    AI    9_      2_2(AI    9_2_0.weight *     2),

    /**
          * å·  ²æ4çCellï   ¼å¯¹æ¹ 1æ­¥é²å  ®ä¹åï¼æ­¤9ä¸ªCellå     è¿å©0
     */
    AI9_3     _0((AI9_2_2.wei    ght +    1) * 2),

          /**
     * å·   ²æ  3çCellï   ¼å¯¹æ¹1æ­¥é²å ®ä¹åï¼æ­¤9ä¸ªCellåè¿å©1
     */
       AI9_  3_1( A  I9_3_0.weight + AI9_1  _0.weight),

    /*    *
     * å·²æ  3çCellï¼å¯¹æ       ¹1æ    ­¥é²å®    ä¹å ï¼æ­¤9ä¸ªCel  låè¿å©2
         */
    AI9_3_2(AI9   _3_0. weight + AI9_2_0.weig ht),

    /**    
     *   å·²æ3çCellï    ¼å¯¹æ¹1æ­¥   é²å®ä¹åï¼æ­¤9ä¸ªCellåè¿å©   3
     * 
       * 2*A                   I9_3_0æ¯ä¸¤ä¸ªæ¹å    ä¸çä¸¤ä¸ªAI9_3_0    ï¼
            * è AI9_3_3æ¯ç¸åæ¹å         ä¸çä¸¤ä¸ªAI9_3_0ï  ¼
                */
    AI9_3_3(AI9_3_0.  weight * 2),

          /**
     * å·²æ      4ç   Cellï¼  å¯¹æ¹1æ­¥é²å®ä¹åï¼   æ­¤9ä¸ªCellåè¿å      ©0
     */
       AI9_4  _0((AI9   _3_3.weight + 1) * 2),

       /**
     * å·²æ4 çCellï     ¼å¯¹æ¹1æ  ­¥é²å®ä¹åï¼æ   ­      ¤9ä¸ªCellåè¿   å©1
     */
      AI9_4_  1(AI9_4_0.weight + AI9_1_0.weight),

         /     **
     * å·²æ4ç   Cellï¼å      ¯¹æ¹1æ­¥é²å®ä¹åï¼  æ­¤9ä¸ªCe  llåè¿å    ©2
        */
    AI   9_4_2(A       I9_4_0.weight + AI9_2_0.weight),          

    /**
     * å·²æ4çCellï¼å ¯¹         æ¹1æ ­    ¥é²   å®ä¹  åï¼æ­¤9ä¸ªCellå      è¿ å©3
     * 
      */
    AI9_ 4_3(AI9_     4_0.     weight   + AI9_3_0.w e       ight       ),

    /  **
     * å·²æ 4çCellï¼å¯¹æ¹1æ­¥é²å®ä¹åï¼  æ­¤9ä¸ ª   Cellåè¿å©4ï¼å³ï¼ä¹è    ½æ5ï¼å¯ ¹æ¹å·²æ æ³ç ´è§£æ­¤9ä¸ªCel   lï   ¼
          * 
     *     2*AI9_4_0æ   ¯ä¸¤ä¸ªæ¹åä¸ç     ä¸  ¤ä¸ª     AI9_4_0ï¼
     * è   AI9_    4_4æ¯ç¸åæ   ¹åä¸çä¸¤ä¸ª   AI9_4_0ï¼   
     */
       AI9_4_4(AI9_4_0.weight * 2    )  ,

     /**
     * å·   ²æ5   çCell
     */
    AI9_5(( AI9_4_4.weight + 1) * Direction.DIRECTIONS.length * 2);

    /**
     * æå¼
     * 
            * ä¸¤ä¸ªAI4çvalueç¨æ¥æ¼å  æä¸ä¸ªAI9    ï¼AI9å·   ææå¼(weigh  t)ã
     * åä¸ä¸ªCellåºè¯¥æ4ä¸ªattack AI9å4ä¸ªdefine AI9ï¼è¿8ä¸ªAI4å°±æ¯è¯¥Cellæå¼ã
          */
    public final in t weight;
   
    /**
     * ç§ææé æ   ¹æ³
     * 
       * @param w     æå¼
     */
    private AI9(int w) {
        weight = w;
    }
}
