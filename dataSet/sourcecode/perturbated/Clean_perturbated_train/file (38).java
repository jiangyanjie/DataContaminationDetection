package com.sun.corba.se.PortableActivationIDL;


/**
*    com/sun/corba/se/PortableActivationIDL/_ServerProxyStub.java  .
* Generated by    the    IDL-to-Jav   a compiler (portable), vers ion "3.2"
*     from c:/re/workspace/8-2-build-windows-amd64-cygwin/jdk8u131/8869/corba/src/share/classes/com/sun/corba/se/PortableActivationIDL/activation.idl
* We   dnesday, March 15, 2017  1:25:04  AM PDT
*/


/**   Server callb   ack int      erface, passed to Act    ivato       r    in registerServer method.
    */
public class _ServerProxyStub extends org.omg.CORBA.por  table.ObjectImpl implements com.sun.corba.se.PortableActivationI    DL.Ser     verProxy
{


  /    ** Shutd    own this server  .      Returns after orb.shutdown()   com    pletes.
    	*/
  p   ublic void s        hutd own                ()
  {
            o rg.omg.     CORBA.portabl    e.I      nputStream  $  in     =   nul                         l;
                              try {
                         org.omg .CORBA.port   able.O          utputStr   ea           m $out    = _reque        st ("s     hutdo   wn",  true)   ;
                         $in = _i     nvok e ($out       );
                       r     et  urn;
                   } catch (or  g.omg.      CO  RB    A.port       a    ble.Appl       icationExce  ption       $ex) {
                                             $        in = $ ex.getInputStre       am ();
                                  String _id = $ex.getId ();  
                                      throw new org     .omg.CORBA.MARSHAL (_id);
            } ca   tc   h (org.omg.CORBA.portable.      RemarshalExce  pti    on $rm) {
                                         shu            tdown (          );
                 } f   inally {
                                    _   releaseReply      ($in);
            }
  } // sh                     utdown


           /**   Insta ll                the server.  Returns af t        er the i  nsta       ll    hook             c  ompletes 
	* executi  on        in the server.
                	 *  /
   pu  bli  c void instal         l ()
  {
             o         r  g.       omg      .  CORB  A.portable.InputStream $in =       null;  
               try {
                org.om  g.C      ORBA.p   ortab  le.O utputStre   a m $ou             t =   _ requ              est ("install", t     rue        );
                      $      in = _    inv    o ke (   $o   ut);
                                re    turn       ;
                } catc h (or     g.o  mg.COR     BA.portable.Appl            ic  a    ti  onException $   ex       ) {
                $in     = $e   x     .ge tInputStream ()    ;   
                      Str ing _i          d =          $ex.getId ();  
                          throw new org.omg.CORBA  .    M       AR    SHAL (_id);    
                                              } ca  tc  h (   org     .           om   g. COR    BA.p       or  ta      ble.Rem   ar  shalException  $rm) {
                                                    install (                 );
                     } finally {
                             _rele    aseReply   (  $in);    
                                                      }  
      } // instal     l

      
  /* * Un   insta     l   l the se        rver.    Returns after the uninst    all hoo     k
  	*   c   ompletes execu        tion.
	*/
        public voi  d un    i     nstall   (   )
  {
                   o   r    g.omg   .COR                 BA.por      table.InputStream $in     = null;
                 try {
                   org.om        g.CORBA.   portable.        OutputS   trea   m $out = _reque         st ("  uni     nstall", true);
                $       in = _invoke ($out);
                 re  turn;
                            }          catch (o   r     g.o  m  g.CORBA.po    rtabl       e .Applic ationExce  ption $ex) {
                    $i                 n = $ex.getInputSt  ream ();
                          String     _id   = $ex.g  etId ();
                  throw new org.omg.   COR  BA.MARSHAL (_id);
                 } catch (org.omg .CORBA.po       rtable.RemarshalE    xception $rm) {
                  uninst all (        );
            }          fin      all  y {
                    _releaseRep  ly ($in);
            }
  } //   uninstal  l

  // Type-specific CORBA::Object o  p   erations
  priv ate static String[] _   _ids = {
    "IDL:PortableActivationIDL/ServerProxy:1.0"};

  publi   c String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void          readO     bject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF   ();
        String[] args = null;
     java.util.Prope  rties props = nul     l;
      org.o   mg.CORBA.OR     B orb = org.omg.CORBA.ORB.init  (args, props);
      try {
     or    g.omg.CORBA.Object o bj  = orb.string_to_object (str    );
         org.omg.CORBA.porta    ble.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void       w   riteObject (java.io.Objec     tOutputStream          s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props =    null;
     org.omg.CORBA.ORB orb = org.omg    .CORBA.ORB.init (args, props);
           try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _ServerProxyStub
